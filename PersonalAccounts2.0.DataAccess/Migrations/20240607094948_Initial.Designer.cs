// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalAccounts2._0.DataAccess;

#nullable disable

namespace PersonalAccounts2._0.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240607094948_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("PersonalAccounts.Core.Models.AccountResidentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResidentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ResidentId");

                    b.ToTable("AccountsResidents");
                });

            modelBuilder.Entity("PersonalAccounts2._0.DataAccess.Models.AccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RoomArea")
                        .HasColumnType("REAL");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountNumber");

                    b.ToTable("Accounts", t =>
                        {
                            t.HasCheckConstraint("valid date", "StartDate < EndDate");
                        });
                });

            modelBuilder.Entity("PersonalAccounts2._0.DataAccess.Models.ResidentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("PersonalAccounts.Core.Models.AccountResidentModel", b =>
                {
                    b.HasOne("PersonalAccounts2._0.DataAccess.Models.AccountModel", "Account")
                        .WithMany("AccountResidents")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalAccounts2._0.DataAccess.Models.ResidentModel", "Resident")
                        .WithMany("AccountResidents")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Resident");
                });

            modelBuilder.Entity("PersonalAccounts2._0.DataAccess.Models.AccountModel", b =>
                {
                    b.Navigation("AccountResidents");
                });

            modelBuilder.Entity("PersonalAccounts2._0.DataAccess.Models.ResidentModel", b =>
                {
                    b.Navigation("AccountResidents");
                });
#pragma warning restore 612, 618
        }
    }
}
